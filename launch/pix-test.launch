<launch>

    <arg name="vehicle" default="penguin"/>
    <arg name="vehicle_type" default="quad"/>
    <arg name="run_estimator" default="true"/>
    <arg name="run_demo_rgbd" default="false"/>

    <arg name="control_mode" value="velocity_altitude"/>
    <arg name="record_bag" default="false"/>
    <arg name="bag_name" default="velocity_control"/>


    <!--    Launches the REEF teleop node to convert joystick commands to velocity command-->
    <include file="$(find reef_teleop)/launch/logitech_controller.launch">
        <arg name="control_mode" value="$(arg control_mode)"/>
        <arg name="initial_z_cmd" value="-1.0"/>
        <arg name="min_z_cmd" value="-3.0"/>
        <arg name="max_z_cmd" value="0.0"/>
        <arg name="invert_x" value="false"/>
        <arg name="x_dot_max" default="0.5"/>
        <arg name="y_dot_max" default="0.5"/>
        <arg name="yawrate_max" default="1.57"/>
    </include>

    <!--    Loads the camera to mocap-marker calibration-->
    <rosparam command="load" file="$(find reef_estimator)/params/kiwi_camera.yaml" />

    <!--    Runs the REEF estimator-->
    <node if="$(arg run_estimator)" name="reef_estimator" pkg="reef_estimator" type="reef_estimator" output="screen">
        <rosparam file="$(find reef_estimator)/params/xy_est_params.yaml" />
        <rosparam file="$(find reef_estimator)/params/z_est_params.yaml" />
        <rosparam file="$(find reef_estimator)/params/basic_params.yaml" />
        <rosparam>
            enable_rgbd: false
            enable_sonar: false
            enable_mocap_xy: true
            enable_mocap_z: true
        </rosparam>
        <remap from="mocap_ned" to="pose_stamped"/>
        <remap from="mocap_velocity/body_level_frame" to="velocity/body_level_frame"/>
        <remap from="rgbd_velocity_body_frame" to="rgbd_to_velocity/body_level_frame"/>
        <remap from="imu/data" to="mavros/imu/data"/>
    </node>

    <!--    Runs the ROS VRPN Node to interface with the mocap system-->
    <node pkg="ros_vrpn_client" name="$(arg vehicle)" type="ros_vrpn_client" args="_vrpn_server_ip:=192.168.1.104" required="true" output="screen">
        <remap from="$(arg vehicle)/ned/pose_stamped" to="pose_stamped"/>
    </node>

    <node pkg="topic_tools" type="relay" name="relay_xform" args="pose_stamped /$(arg vehicle)/ned/pose_stamped" />

    <!-- Pixhawk_xform translates mocap to fake gps for the pixhawk -->
    <node name="pixhawk_xform" type="pixhawk_xform" pkg="pixhawk_xform" output="screen" args="$(arg vehicle)"/>

    <remap to="/pixhawk_xform/pose_stamped" from="mavros/fake_gps/mocap/pose"/>
<!--    Launches the MAVROS node to interface with pixhawk-->
    <include file="$(find pixhawk_xform)/launch/apm.launch">
      <arg name="fcu_url" value="/dev/ttyUSB0:921600?ids=255,240"/>
    </include>

    <node pkg="rosservice" type="rosservice" name="setter" args="call --wait /mavros/set_stream_rate 0 200 1" />

    <!--    Runs the Position to Velocity node-->
    <node name="pose_to_vel" pkg="position_to_velocity" type="position_to_velocity_node" output="screen" >
        <rosparam command="load" file="$(find position_to_velocity)/params/basic.yaml" />
    </node>


    <!--    Runs the REEF Control node-->
    <rosparam file="$(find reef_control)/params/$(arg vehicle_type)_pid.yaml" />
    <node name="reef_control_pid" pkg="reef_control" type="reef_control_node" output="screen"/>

    <node if="$(arg record_bag)" name="record" pkg="rosbag" type="record" args="-O $(arg bag_name) cam_to_init attitude attitude/euler rc_raw imu/data sonar status pose_stamped xyz_debug_estimate xyz_estimate velocity/body_level_frame controller_state xyz_debug_estimate rgbd_velocity/body_level_frame mavros/setpoint_raw/attitude"/>

</launch>
